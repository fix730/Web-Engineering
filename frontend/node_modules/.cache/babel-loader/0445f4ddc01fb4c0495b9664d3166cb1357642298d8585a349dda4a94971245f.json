{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DHBW\\\\Web-Engineering\\\\Web-Engineering\\\\frontend\\\\src\\\\pages\\\\components\\\\SearchBar\\\\elements.tsx\";\nimport { MagnifyingGlassIcon } from \"@heroicons/react/24/solid\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchInput = ({\n  placeholder = \"Suchen...\",\n  value,\n  onChange,\n  className,\n  roundedLeft = false,\n  // Standardmäßig keine Rundung, wird von Parent gesteuert\n  roundedRight = false // Standardmäßig keine Rundung, wird von Parent gesteuert\n}) => {\n  // Dynamische Rundungs-Klassen basierend auf Props\n  const getRoundedClasses = () => {\n    if (roundedLeft && roundedRight) return 'rounded-full'; // Für den Fall, dass beides gewünscht ist\n    if (roundedLeft) return 'rounded-l-full';\n    if (roundedRight) return 'rounded-r-full';\n    return 'rounded-none'; // Keine Rundung, wenn beides false ist\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex items-center ${className || ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\",\n      children: /*#__PURE__*/_jsxDEV(MagnifyingGlassIcon, {\n        className: \"h-5 w-5 text-gray-400\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange,\n      className: `\n                    block w-full py-2 pl-10 pr-3 border border-gray-300\n                    focus:outline-none focus:ring-2 focus:ring-blue-500\n                    text-gray-900 placeholder:text-gray-400\n                    ${getRoundedClasses()} // Dynamische Rundung\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = SearchInput;\nexport function MultiSelectCity({\n  className,\n  roundedLeft = false,\n  roundedRight = false\n}) {\n  const options = [{\n    value: '1',\n    label: 'München'\n  }, {\n    value: '2',\n    label: 'Stuttgart'\n  }, {\n    value: '3',\n    label: 'Mannheim'\n  }];\n  const getRoundedClasses = () => {\n    if (roundedLeft && roundedRight) return 'rounded-full';\n    if (roundedLeft) return 'rounded-l-full';\n    if (roundedRight) return 'rounded-r-full';\n    return 'rounded-none'; // Keine Rundung, wenn beides false ist\n  };\n  return (\n    /*#__PURE__*/\n    // Das äußere div muss die 'className' Prop erhalten\n    _jsxDEV(\"div\", {\n      className: `relative ${className || ''}`,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        name: \"Ort ausw\\xE4hlen\",\n        options: options,\n        className: `\n                    basic-multi-select w-full\n                    border border-gray-300 // Border hinzufügen, wenn nicht schon durch basic-multi-select definiert\n                    focus:outline-none focus:ring-2 focus:ring-blue-500 // Fokus-Stile\n                    sm:${getRoundedClasses()} // Dynamische Rundung\n                `,\n        classNamePrefix: \"select\",\n        placeholder: \"Ort ausw\\xE4hlen\"\n        // Stil-Anpassungen für React-Select, um die Rundungen zu überschreiben\n        // Dies ist oft der kritischste Teil bei react-select und Tailwind\n        ,\n        styles: {\n          control: baseStyles => ({\n            ...baseStyles,\n            // Entfernt die Standard-Rundungen von react-select, um Tailwind-Klassen zu erlauben\n            borderRadius: '0px'\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c2 = MultiSelectCity;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchInput\");\n$RefreshReg$(_c2, \"MultiSelectCity\");","map":{"version":3,"names":["MagnifyingGlassIcon","React","Select","jsxDEV","_jsxDEV","SearchInput","placeholder","value","onChange","className","roundedLeft","roundedRight","getRoundedClasses","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","MultiSelectCity","options","label","isMulti","name","classNamePrefix","styles","control","baseStyles","borderRadius","_c2","$RefreshReg$"],"sources":["C:/Projects/DHBW/Web-Engineering/Web-Engineering/frontend/src/pages/components/SearchBar/elements.tsx"],"sourcesContent":["import { MagnifyingGlassIcon } from \"@heroicons/react/24/solid\";\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\n\r\ninterface MultiSelectCityProps {\r\n    className?: string; \r\n    roundedLeft?: boolean; \r\n    roundedRight?: boolean;\r\n}\r\n\r\ninterface SearchInputProps {\r\n    placeholder?: string;\r\n    value?: string;\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    className?: string;\r\n    // Hinzugefügte Props für Rundung\r\n    roundedLeft?: boolean;\r\n    roundedRight?: boolean;\r\n}\r\n\r\nexport const SearchInput: React.FC<SearchInputProps> = ({\r\n    placeholder = \"Suchen...\",\r\n    value,\r\n    onChange,\r\n    className,\r\n    roundedLeft = false, // Standardmäßig keine Rundung, wird von Parent gesteuert\r\n    roundedRight = false // Standardmäßig keine Rundung, wird von Parent gesteuert\r\n}) => {\r\n    // Dynamische Rundungs-Klassen basierend auf Props\r\n    const getRoundedClasses = () => {\r\n        if (roundedLeft && roundedRight) return 'rounded-full'; // Für den Fall, dass beides gewünscht ist\r\n        if (roundedLeft) return 'rounded-l-full';\r\n        if (roundedRight) return 'rounded-r-full';\r\n        return 'rounded-none'; // Keine Rundung, wenn beides false ist\r\n    };\r\n\r\n    return (\r\n        <div className={`relative flex items-center ${className || ''}`}>\r\n            {/* Icon-Container */}\r\n            <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n            </div>\r\n            {/* Das tatsächliche Input-Feld */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                className={`\r\n                    block w-full py-2 pl-10 pr-3 border border-gray-300\r\n                    focus:outline-none focus:ring-2 focus:ring-blue-500\r\n                    text-gray-900 placeholder:text-gray-400\r\n                    ${getRoundedClasses()} // Dynamische Rundung\r\n                `}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport function MultiSelectCity({ className, roundedLeft = false, roundedRight = false }: MultiSelectCityProps) {\r\n    const options = [\r\n        { value: '1', label: 'München' },\r\n        { value: '2', label: 'Stuttgart' },\r\n        { value: '3', label: 'Mannheim' }\r\n    ];\r\n\r\n    const getRoundedClasses = () => {\r\n        if (roundedLeft && roundedRight) return 'rounded-full';\r\n        if (roundedLeft) return 'rounded-l-full';\r\n        if (roundedRight) return 'rounded-r-full';\r\n        return 'rounded-none'; // Keine Rundung, wenn beides false ist\r\n    };\r\n\r\n    return (\r\n        // Das äußere div muss die 'className' Prop erhalten\r\n        <div className={`relative ${className || ''}`}>\r\n            <Select\r\n                isMulti\r\n                name=\"Ort auswählen\"\r\n                options={options}\r\n                className={`\r\n                    basic-multi-select w-full\r\n                    border border-gray-300 // Border hinzufügen, wenn nicht schon durch basic-multi-select definiert\r\n                    focus:outline-none focus:ring-2 focus:ring-blue-500 // Fokus-Stile\r\n                    sm:${getRoundedClasses()} // Dynamische Rundung\r\n                `}\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"Ort auswählen\"\r\n                // Stil-Anpassungen für React-Select, um die Rundungen zu überschreiben\r\n                // Dies ist oft der kritischste Teil bei react-select und Tailwind\r\n                styles={{\r\n                    control: (baseStyles) => ({\r\n                        ...baseStyles,\r\n                        // Entfernt die Standard-Rundungen von react-select, um Tailwind-Klassen zu erlauben\r\n                        borderRadius: '0px',\r\n                    }),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}