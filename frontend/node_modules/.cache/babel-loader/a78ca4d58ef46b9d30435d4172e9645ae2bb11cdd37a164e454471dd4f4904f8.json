{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DHBW\\\\Web-Engineering\\\\Web-Engineering\\\\frontend\\\\src\\\\pages\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAppDispatch } from \"../hooks/redux-hooks\";\nimport { register } from \"../slices/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const dispatch = useAppDispatch();\n  const [name, setName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleRegister = async () => {\n    // This is only a basic validation of inputs. Improve this as needed.\n    if (name && email && password) {\n      try {\n        await dispatch(register({\n          name,\n          email,\n          password\n        })).unwrap();\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      // Show an error message.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Registrieren\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"+TdroZEqHQ6yHcda6+OGkW7G56c=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useAppDispatch","register","jsxDEV","_jsxDEV","Register","_s","dispatch","name","setName","firstName","setFirstName","email","setEmail","password","setPassword","handleRegister","unwrap","e","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/DHBW/Web-Engineering/Web-Engineering/frontend/src/pages/Register.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux-hooks\";\r\nimport { register } from \"../slices/authSlice\";\r\n\r\nfunction Register() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleRegister = async () => {\r\n        // This is only a basic validation of inputs. Improve this as needed.\r\n        if (name && email && password) {\r\n            try {\r\n                await dispatch(\r\n                    register({\r\n                        name,\r\n                        email,\r\n                        password,\r\n                })\r\n                ).unwrap();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else {\r\n            // Show an error message.\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>Registrieren</div>\r\n    );\r\n}\r\nexport default Register;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAC;EAEjC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAIR,IAAI,IAAII,KAAK,IAAIE,QAAQ,EAAE;MAC3B,IAAI;QACA,MAAMP,QAAQ,CACVL,QAAQ,CAAC;UACLM,IAAI;UACJI,KAAK;UACLE;QACR,CAAC,CACD,CAAC,CAACG,MAAM,CAAC,CAAC;MACd,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MACpB;IACJ,CAAC,MAAM;MACH;IAAA;EAER,CAAC;EAGD,oBACId,OAAA;IAAAiB,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE/B;AAACnB,EAAA,CA/BQD,QAAQ;EAAA,QACIJ,cAAc;AAAA;AAAAyB,EAAA,GAD1BrB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}