{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DHBW\\\\Web-Engineering\\\\Web-Engineering\\\\frontend\\\\src\\\\pages\\\\components\\\\SearchBar\\\\SearchBar.tsx\";\n// MultiSelectCity.tsx\nimport React from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultiSelectCity({\n  className,\n  roundedLeft = false,\n  roundedRight = false\n}) {\n  const options = [{\n    value: '1',\n    label: 'München'\n  }, {\n    value: '2',\n    label: 'Stuttgart'\n  }, {\n    value: '3',\n    label: 'Mannheim'\n  }];\n  const getRoundedClasses = () => {\n    if (roundedLeft && roundedRight) return 'rounded-full';\n    if (roundedLeft) return 'rounded-l-full';\n    if (roundedRight) return 'rounded-r-full';\n    return 'rounded-none'; // Keine Rundung, wenn beides false ist\n  };\n  return (\n    /*#__PURE__*/\n    // Das äußere div muss die 'className' Prop erhalten\n    _jsxDEV(\"div\", {\n      className: `relative ${className || ''}`,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        name: \"Ort ausw\\xE4hlen\",\n        options: options,\n        className: `\n                    basic-multi-select w-full\n                    border border-gray-300 // Border hinzufügen, wenn nicht schon durch basic-multi-select definiert\n                    focus:outline-none focus:ring-2 focus:ring-blue-500 // Fokus-Stile\n                    ${getRoundedClasses()} // Dynamische Rundung\n                `,\n        classNamePrefix: \"select\",\n        placeholder: \"Ort ausw\\xE4hlen\"\n        // Stil-Anpassungen für React-Select, um die Rundungen zu überschreiben\n        // Dies ist oft der kritischste Teil bei react-select und Tailwind\n        ,\n        styles: {\n          control: baseStyles => ({\n            ...baseStyles,\n            // Entfernt die Standard-Rundungen von react-select, um Tailwind-Klassen zu erlauben\n            borderRadius: '0px'\n            // Wichtig: Border sollte hier auch gesteuert werden, wenn du keine Doppelborder willst\n            // oder wenn du individuelle Border-Seiten kontrollieren möchtest\n          })\n          // Du musst eventuell auch 'menu' und 'multiValue' Styles anpassen,\n          // falls deren Rundungen nicht passen\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = MultiSelectCity;\nvar _c;\n$RefreshReg$(_c, \"MultiSelectCity\");","map":{"version":3,"names":["React","Select","jsxDEV","_jsxDEV","MultiSelectCity","className","roundedLeft","roundedRight","options","value","label","getRoundedClasses","children","isMulti","name","classNamePrefix","placeholder","styles","control","baseStyles","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/DHBW/Web-Engineering/Web-Engineering/frontend/src/pages/components/SearchBar/SearchBar.tsx"],"sourcesContent":["// MultiSelectCity.tsx\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\n\r\ninterface MultiSelectCityProps {\r\n    className?: string; // Hinzugefügt, um Klassen von außen zu empfangen\r\n    roundedLeft?: boolean; // Neu\r\n    roundedRight?: boolean; // Neu\r\n}\r\n\r\nexport function MultiSelectCity({ className, roundedLeft = false, roundedRight = false }: MultiSelectCityProps) {\r\n    const options = [\r\n        { value: '1', label: 'München' },\r\n        { value: '2', label: 'Stuttgart' },\r\n        { value: '3', label: 'Mannheim' }\r\n    ];\r\n\r\n    const getRoundedClasses = () => {\r\n        if (roundedLeft && roundedRight) return 'rounded-full';\r\n        if (roundedLeft) return 'rounded-l-full';\r\n        if (roundedRight) return 'rounded-r-full';\r\n        return 'rounded-none'; // Keine Rundung, wenn beides false ist\r\n    };\r\n\r\n    return (\r\n        // Das äußere div muss die 'className' Prop erhalten\r\n        <div className={`relative ${className || ''}`}>\r\n            <Select\r\n                isMulti\r\n                name=\"Ort auswählen\"\r\n                options={options}\r\n                className={`\r\n                    basic-multi-select w-full\r\n                    border border-gray-300 // Border hinzufügen, wenn nicht schon durch basic-multi-select definiert\r\n                    focus:outline-none focus:ring-2 focus:ring-blue-500 // Fokus-Stile\r\n                    ${getRoundedClasses()} // Dynamische Rundung\r\n                `}\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"Ort auswählen\"\r\n                // Stil-Anpassungen für React-Select, um die Rundungen zu überschreiben\r\n                // Dies ist oft der kritischste Teil bei react-select und Tailwind\r\n                styles={{\r\n                    control: (baseStyles) => ({\r\n                        ...baseStyles,\r\n                        // Entfernt die Standard-Rundungen von react-select, um Tailwind-Klassen zu erlauben\r\n                        borderRadius: '0px',\r\n                        // Wichtig: Border sollte hier auch gesteuert werden, wenn du keine Doppelborder willst\r\n                        // oder wenn du individuelle Border-Seiten kontrollieren möchtest\r\n                    }),\r\n                    // Du musst eventuell auch 'menu' und 'multiValue' Styles anpassen,\r\n                    // falls deren Rundungen nicht passen\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlC,OAAO,SAASC,eAAeA,CAAC;EAAEC,SAAS;EAAEC,WAAW,GAAG,KAAK;EAAEC,YAAY,GAAG;AAA4B,CAAC,EAAE;EAC5G,MAAMC,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAU,CAAC,EAChC;IAAED,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAY,CAAC,EAClC;IAAED,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAW,CAAC,CACpC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIL,WAAW,IAAIC,YAAY,EAAE,OAAO,cAAc;IACtD,IAAID,WAAW,EAAE,OAAO,gBAAgB;IACxC,IAAIC,YAAY,EAAE,OAAO,gBAAgB;IACzC,OAAO,cAAc,CAAC,CAAC;EAC3B,CAAC;EAED;IAAA;IACI;IACAJ,OAAA;MAAKE,SAAS,EAAE,YAAYA,SAAS,IAAI,EAAE,EAAG;MAAAO,QAAA,eAC1CT,OAAA,CAACF,MAAM;QACHY,OAAO;QACPC,IAAI,EAAC,kBAAe;QACpBN,OAAO,EAAEA,OAAQ;QACjBH,SAAS,EAAE;AAC3B;AACA;AACA;AACA,sBAAsBM,iBAAiB,CAAC,CAAC;AACzC,iBAAkB;QACFI,eAAe,EAAC,QAAQ;QACxBC,WAAW,EAAC;QACZ;QACA;QAAA;QACAC,MAAM,EAAE;UACJC,OAAO,EAAGC,UAAU,KAAM;YACtB,GAAGA,UAAU;YACb;YACAC,YAAY,EAAE;YACd;YACA;UACJ,CAAC;UACD;UACA;QACJ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;AAEd;AAACC,EAAA,GA7CerB,eAAe;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}