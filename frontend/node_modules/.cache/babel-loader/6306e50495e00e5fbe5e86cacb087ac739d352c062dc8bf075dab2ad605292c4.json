{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DHBW\\\\Web-Engineering\\\\Web-Engineering\\\\frontend\\\\src\\\\pages\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAppDispatch } from \"../hooks/redux-hooks\";\nimport { login } from \"../slices/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async () => {\n    // This is only a basic validation of inputs. Improve this as needed.\n    if (email && password) {\n      try {\n        await dispatch(login({\n          email,\n          password\n        })).unwrap();\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      // Show an error message.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"mbXn22WqSONI4mi6RjCvWTljzek=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useAppDispatch","login","jsxDEV","_jsxDEV","Login","_s","dispatch","email","setEmail","password","setPassword","handleLogin","unwrap","e","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/DHBW/Web-Engineering/Web-Engineering/frontend/src/pages/Login.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux-hooks\";\r\nimport { login } from \"../slices/authSlice\";\r\n\r\nfunction Login() {\r\n    const dispatch = useAppDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleLogin = async () => {\r\n        // This is only a basic validation of inputs. Improve this as needed.\r\n        if (email && password) {\r\n            try {\r\n                await dispatch(\r\n                    login({\r\n                        email,\r\n                        password,\r\n                    })\r\n                ).unwrap();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else {\r\n            // Show an error message.\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>Login</div>\r\n    )\r\n}\r\nexport default Login;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAC;EACjC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,IAAIJ,KAAK,IAAIE,QAAQ,EAAE;MACnB,IAAI;QACA,MAAMH,QAAQ,CACVL,KAAK,CAAC;UACFM,KAAK;UACLE;QACJ,CAAC,CACL,CAAC,CAACG,MAAM,CAAC,CAAC;MACd,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MACpB;IACJ,CAAC,MAAM;MACH;IAAA;EAER,CAAC;EAED,oBACIV,OAAA;IAAAa,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAExB;AAACf,EAAA,CA1BQD,KAAK;EAAA,QACOJ,cAAc;AAAA;AAAAqB,EAAA,GAD1BjB,KAAK;AA2Bd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}