{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DHBW\\\\Web-Engineering\\\\Web-Engineering\\\\frontend\\\\src\\\\pages\\\\components\\\\SearchBar\\\\SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MultiSelectCity } from \"./elements\";\nimport { SearchInput } from \"./elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchBar() {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedCities, setSelectedCities] = useState([]);\n  const handleSearchChange = event => {\n    setSearchValue(event.target.value);\n  };\n  const handleCityChange = cities => {\n    setSelectedCities(cities);\n    //console.log(\"Ausgewählte Städte:\", cities); \n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`Suche gestartet mit: ${searchValue} und Städten: ${selectedCities.map(city => city.label).join(', ')}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"\\r flex flex-col items-center p-4 bg-gray-100 gap-y-3 // Mobile: untereinander, vertikaler Abstand\\r sm:flex-row sm:justify-center sm:space-x-0 sm:items-stretch // Desktop: nebeneinander, KEIN Abstand, gleiche H\\xF6he\\r relative\\r \",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      placeholder: \"Was suchst du?\",\n      value: searchValue,\n      onChange: handleSearchChange,\n      className: \"w-full h-full sm:flex-1 sm:max-w-xs\" // Breite für das Suchfeld und das für Vordergrund relative z-0 focus:z-10\n      ,\n      roundedLeft: true,\n      roundedRight: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectCity, {\n      className: \"w-full h-full sm:flex-1 sm:max-w-xs sm:rounded-none // Desktop: keine Rundung, aber Mobile hat 4px default\\r \" // <- Die sm:rounded-none-Klasse wird hier direkt angewendet\n      ,\n      roundedLeft: false,\n      roundedRight: false,\n      value: selectedCities,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"\\r w-full h-full px-4 py-2 bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\\r sm:w-auto sm:rounded-l-none sm:rounded-r-full // Desktop: links keine Rundung, rechts volle Rundung\\r \",\n      children: \"Suchen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"GEW2NlAEC7AQCFGs8k7Q8qPY938=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","MultiSelectCity","SearchInput","jsxDEV","_jsxDEV","SearchBar","_s","searchValue","setSearchValue","selectedCities","setSelectedCities","handleSearchChange","event","target","value","handleCityChange","cities","handleSubmit","preventDefault","alert","map","city","label","join","className","onSubmit","children","placeholder","onChange","roundedLeft","roundedRight","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Projects/DHBW/Web-Engineering/Web-Engineering/frontend/src/pages/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MultiSelectCity } from \"./elements\"; \r\nimport { SearchInput } from \"./elements\";\r\nimport { OptionType } from \"./elements\"; \r\n\r\nexport function SearchBar() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [selectedCities, setSelectedCities] = useState<OptionType[]>([]);\r\n\r\n\r\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    const handleCityChange = (cities: OptionType[]) => {\r\n        setSelectedCities(cities);\r\n        //console.log(\"Ausgewählte Städte:\", cities); \r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        alert(`Suche gestartet mit: ${searchValue} und Städten: ${selectedCities.map(city => city.label).join(', ')}`);\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className=\"\r\n            \r\n                flex flex-col items-center p-4 bg-gray-100 gap-y-3 // Mobile: untereinander, vertikaler Abstand\r\n                sm:flex-row sm:justify-center sm:space-x-0 sm:items-stretch // Desktop: nebeneinander, KEIN Abstand, gleiche Höhe\r\n                relative\r\n            \"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {/* SearchInput: links abgerundet, rechts keine Rundung */}\r\n            <SearchInput\r\n                placeholder=\"Was suchst du?\"\r\n                value={searchValue}\r\n                onChange={handleSearchChange}\r\n                className=\"w-full h-full sm:flex-1 sm:max-w-xs\" // Breite für das Suchfeld und das für Vordergrund relative z-0 focus:z-10\r\n                roundedLeft={true}\r\n                roundedRight={false}\r\n            />\r\n\r\n            {/* MultiSelectCity: keine Rundung an beiden Seiten auf Desktop */}\r\n            <MultiSelectCity\r\n                className=\"w-full h-full sm:flex-1 sm:max-w-xs sm:rounded-none // Desktop: keine Rundung, aber Mobile hat 4px default\r\n                \" // <- Die sm:rounded-none-Klasse wird hier direkt angewendet\r\n                roundedLeft={false} \r\n                roundedRight={false} \r\n                value={selectedCities}\r\n                onChange={handleCityChange}\r\n            />\r\n\r\n            {/* Button: rechts abgerundet, links keine Rundung */}\r\n            <button\r\n                type=\"submit\"\r\n                className=\"\r\n                    w-full h-full px-4 py-2 bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\r\n                    sm:w-auto sm:rounded-l-none sm:rounded-r-full // Desktop: links keine Rundung, rechts volle Rundung\r\n                \"\r\n            >\r\n                Suchen\r\n            </button>\r\n        </form>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,YAAY;AAC5C,SAASC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAe,EAAE,CAAC;EAGtE,MAAMW,kBAAkB,GAAIC,KAA0C,IAAK;IACvEJ,cAAc,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,MAAoB,IAAK;IAC/CN,iBAAiB,CAACM,MAAM,CAAC;IACzB;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIL,KAAuC,IAAK;IAC9DA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtBC,KAAK,CAAC,wBAAwBZ,WAAW,iBAAiBE,cAAc,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EAClH,CAAC;EAED,oBACInB,OAAA;IACIoB,SAAS,EAAC,yOAKT;IACDC,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAGvBtB,OAAA,CAACF,WAAW;MACRyB,WAAW,EAAC,gBAAgB;MAC5Bb,KAAK,EAAEP,WAAY;MACnBqB,QAAQ,EAAEjB,kBAAmB;MAC7Ba,SAAS,EAAC,qCAAqC,CAAC;MAAA;MAChDK,WAAW,EAAE,IAAK;MAClBC,YAAY,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAGF9B,OAAA,CAACH,eAAe;MACZuB,SAAS,EAAC,+GACT,CAAC;MAAA;MACFK,WAAW,EAAE,KAAM;MACnBC,YAAY,EAAE,KAAM;MACpBhB,KAAK,EAAEL,cAAe;MACtBmB,QAAQ,EAAEb;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAGF9B,OAAA;MACI+B,IAAI,EAAC,QAAQ;MACbX,SAAS,EAAC,kOAGT;MAAAE,QAAA,EACJ;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf;AAAC5B,EAAA,CA7DeD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}