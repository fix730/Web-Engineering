{
	"info": {
		"_postman_id": "ba68d2a5-c839-4479-acef-1df1f1048193",
		"name": "Webenginering JWT Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43801566",
		"_collection_link": "https://felix-1169268.postman.co/workspace/Felix's-Workspace~c89687e7-2403-4321-864e-a7e1348c903a/collection/43801566-ba68d2a5-c839-4479-acef-1df1f1048193?action=share&source=collection_link&creator=43801566"
	},
	"item": [
		{
			"name": "Register Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains user and token cookie\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user).to.be.an(\"object\");\r",
							"    \r",
							"    const cookies = pm.cookies;\r",
							"    pm.expect(cookies.has(\"token\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"User data is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const user = jsonData.user;\r",
							"    pm.expect(user.email).to.equal(\"User.Neu@example.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"User\",\r\n    \"firstName\": \"Neu\",\r\n    \"email\": \"User.Neu@example.com\",\r\n    \"password\": \"password\", \r\n    \"birthday\": \"2000-01-01\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Protected",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"is authenticated\", function (){\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"You are authenticated\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test123\"\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:8000/api/protected",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"protected"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains logout message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User logged out\");\r",
							"});\r",
							"\r",
							"pm.test(\"Token cookie has been cleared\", function () {\r",
							"    const cookies = pm.cookies;\r",
							"   pm.expect(cookies.token).to.be.undefined;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/auth/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Protected not",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"is not authenticated\", function (){\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test123\"\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:8000/api/protected",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"protected"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains user and token cookie\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user).to.be.an(\"object\");\r",
							"    \r",
							"    const cookies = pm.cookies;\r",
							"    pm.expect(cookies.has(\"token\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"User data is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const user = jsonData.user;\r",
							"    pm.expect(user.email).to.equal(\"User.Neu@example.com\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"User.Neu@example.com\",\r\n  \"password\": \"password\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "newPost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuscode ist 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Body enthält 'neuer Post erfolgreich in DB gespeichert'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"neuer Post erfolgreich in DB gespeichert\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "Berlin",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Städtetrip nach Berlin",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Cooler Trip mit vielen Sehenswürdigkeiten",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de80-4f08-4b70-af08-87c0511ac80e"
						},
						{
							"key": "start_time",
							"value": "2025-06-27T13:45:23.456Z",
							"type": "text"
						},
						{
							"key": "end_time",
							"value": "2025-06-27T13:45:23.456Z",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/new",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post All",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if the response status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						},
						{
							"key": "postId",
							"value": "30",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if the response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						},
						{
							"key": "postId",
							"value": "47",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/?postId=47",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						""
					],
					"query": [
						{
							"key": "postId",
							"value": "47"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "one Post",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/one?postId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"one"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/search?title=&locations=4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"search"
					],
					"query": [
						{
							"key": "title",
							"value": ""
						},
						{
							"key": "locations",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test: Statuscode ist 200 OK\r",
							"pm.test(\"Statuscode ist 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test: Content-Type Header ist korrekt\r",
							"pm.test(\"Content-Type Header is a picture\", function () {\r",
							"    const contentType = pm.response.headers.get('Content-Type');\r",
							"    pm.expect(contentType).to.be.a('string');\r",
							"    pm.expect(contentType).to.include('image/');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/api/image/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"image",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Location",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/api/post/location",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"location"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\": \"2\",\r\n    \"text\": \"Was ist das??\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/comment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/api/post/comment?postId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"comment"
					],
					"query": [
						{
							"key": "postId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test post like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\":\"30\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/like",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"like"
					]
				}
			},
			"response": []
		},
		{
			"name": "is Post liked",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\":\"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/like/byUser?postId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"like",
						"byUser"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Liked Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						},
						{
							"key": "postId",
							"value": "2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/like/users?postId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"like",
						"users"
					],
					"query": [
						{
							"key": "postId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test post like count",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\":\"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/like/count?postId=30",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"like",
						"count"
					],
					"query": [
						{
							"key": "postId",
							"value": "30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test post like  remove",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\":\"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/post/like?postId=30",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"like"
					],
					"query": [
						{
							"key": "postId",
							"value": "30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User has Liked Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "locationName",
							"value": "München",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Sonnenuntergang am Seweewew",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Wunderschöner Sonnenuntergang am nächsten Seweewe",
							"type": "text"
						},
						{
							"key": "imagePost",
							"type": "file",
							"src": "postman-cloud:///1f04de6d-fd9d-4fe0-91fa-0641d98d6777"
						},
						{
							"key": "postId",
							"value": "2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/post/user/liked",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"post",
						"user",
						"liked"
					],
					"query": [
						{
							"key": "postId",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains user and token cookie\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user).to.be.an(\"object\");\r",
							"    \r",
							"    const cookies = pm.cookies;\r",
							"    pm.expect(cookies.has(\"token\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"User data is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const user = jsonData.user;\r",
							"    pm.expect(user.email).to.equal(\"User.Neu@example.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"currentPasswort\": \"password\",\r\n    \"newPassword\": \"passwort\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/user/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user",
						"data"
					]
				}
			},
			"response": []
		},
		{
			"name": "change E-Mail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User data is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const user = jsonData.user;\r",
							"    pm.expect(user.email).to.equal(\"x@example.com\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"x@example.com\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/user/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user",
						"data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains logout message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User logged out\");\r",
							"});\r",
							"\r",
							"pm.test(\"Token cookie has been cleared\", function () {\r",
							"    const cookies = pm.cookies;\r",
							"   pm.expect(cookies.token).to.be.undefined;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/auth/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}